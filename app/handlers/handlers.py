from app.handlers.router import router
import asyncio
import logging
import random
from aiogram.types import Message, CallbackQuery, BufferedInputFile
from aiogram.filters import CommandStart, Command, StateFilter
from aiogram import F
from aiogram.fsm.context import FSMContext

from app.keyboards import inline as inline_keyboards

from app.states.states import Post

from aiogram.types import BufferedInputFile

from app.requests.user.login import login
from app.requests.helpers.get_cat_error import get_cat_error_async
#===========================================================================================================================
# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –æ—Å–Ω–æ–≤–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤
#===========================================================================================================================

@router.message(CommandStart())
async def cmd_start(message: Message, state: FSMContext):
    await state.clear()
    data = await login(telegram_id=message.from_user.id)
    if data is None:
        logging.error("Error while logging in")
        await message.answer("–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ üòî", reply_markup=inline_keyboards.restart)
        return
    await state.update_data(telegram_id = data.get("telegram_id"))
    await message.reply("–ü—Ä–∏–≤–µ—Ç! üëã")
    await message.reply("–Ø –±–æ—Ç –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã Florilegium. –Ø –ø–æ–º–æ–≥—É –≤–∞–º –≤—ã–±—Ä–∞—Ç—å –∏ –∑–∞–∫–∞–∑–∞—Ç—å –ª—É—á—à–∏–µ —ç–∫–∑–æ—Ç–∏—á–µ—Å–∫–∏–µ —Ä–∞—Å—Ç–µ–Ω–∏—è")
    await message.answer("–Ø –º–Ω–æ–≥–æ —á—Ç–æ —É–º–µ—é üëá", reply_markup=inline_keyboards.main)

@router.callback_query(F.data == "restart")
async def callback_start(callback: CallbackQuery, state: FSMContext):
    await callback.answer()
    await state.clear()
    data = await login(telegram_id=callback.from_user.id)
    if data is None:
        logging.error("Error while logging in")
        await callback.message.answer("–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ üòî", reply_markup=inline_keyboards.restart)
        return
    await state.update_data(telegram_id = data.get("telegram_id"))
    await callback.message.reply("–ü—Ä–∏–≤–µ—Ç! üëã")
    await callback.message.reply("–Ø –±–æ—Ç –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã Florilegium. –Ø –ø–æ–º–æ–≥—É –≤–∞–º –≤—ã–±—Ä–∞—Ç—å –∏ –∑–∞–∫–∞–∑–∞—Ç—å –ª—É—á—à–∏–µ —ç–∫–∑–æ—Ç–∏—á–µ—Å–∫–∏–µ —Ä–∞—Å—Ç–µ–Ω–∏—è")
    await callback.message.answer("–Ø –º–Ω–æ–≥–æ —á—Ç–æ —É–º–µ—é üëá", reply_markup=inline_keyboards.main)

@router.message(Command("help"))
async def cmd_help(message: Message):
    await message.reply(text="–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–≥–∞–µ—Ç –≤—ã–±–∏—Ä–∞—Ç—å —ç–∫–∑–æ—Ç–∏—á–µ—Å–∫–∏–µ —Ä–∞—Å—Ç–µ–Ω–∏—è –∏–∑ –Ω—É–∂–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π\n\n –û–Ω –º–æ–∂–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π \n\n–í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±–∏—Ä–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ –≤–∞—Å —Ä–∞—Å—Ç–µ–Ω–∏—è –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–π, –∏–º–µ—é—â–∏—Ö—Å—è –≤ –Ω–∞–ª–∏—á–∏–∏\n\n–ï—Å–ª–∏ –æ—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã, –ø–∏—à–∏ –Ω–∞—à–∏–º –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º:\n\n@Elena_Noro\n\n@dianabol_metandienon_enjoyer", reply_markup=inline_keyboards.home)

@router.message(Command("contacts"))
async def cmd_contacts(message: Message):
    text = "–°–≤—è–∑—å —Å —Ä–∞–∑—Ä–∞–±–æ–º: üìû\n\n\\@dianabol\\_metandienon\\_enjoyer ü§ù\n\n[GitHub](https://github.com/Segun228)"
    await message.reply(text=text, reply_markup=inline_keyboards.home, parse_mode='MarkdownV2')

@router.callback_query(F.data == "contacts")
async def contacts_callback(callback: CallbackQuery):
    await callback.answer()
    text = "–°–≤—è–∑—å —Å —Ä–∞–∑—Ä–∞–±–æ–º: üìû\n\n\\@dianabol\\_metandienon\\_enjoyer ü§ù\n\n[GitHub](https://github.com/Segun228)"
    await callback.message.edit_text(text=text, reply_markup=inline_keyboards.home, parse_mode='MarkdownV2')


@router.callback_query(F.data == "main_menu")
async def main_menu_callback(callback: CallbackQuery):
    await callback.answer()
    await callback.message.answer("–Ø –º–Ω–æ–≥–æ —á—Ç–æ —É–º–µ—é üëá", reply_markup=inline_keyboards.main)


#===========================================================================================================================
# –í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –∞–∫–∫–∞—É–Ω—Ç–æ–º
#===========================================================================================================================
@router.callback_query(F.data == "account_menu")
async def account_menu_callback(callback: CallbackQuery):
    await callback.answer()
    await callback.message.edit_text("–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å —Å –≤–∞—à–∏–º –∞–∫–∫–∞—É–Ω—Ç–æ–º? üë§", reply_markup=inline_keyboards.account_menu)


@router.callback_query(F.data == "delete_account_confirmation")
async def delete_account_confirmation_callback(callback: CallbackQuery):
    await callback.answer()
    await callback.message.edit_text("–í—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç? üò≥ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–ø–∏—Å–∏ –±—É–¥–µ—Ç –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ... üóëÔ∏è", reply_markup=inline_keyboards.delete_account_confirmation_menu)


@router.callback_query(F.data == "delete_account")
async def delete_account_callback(callback: CallbackQuery, state: FSMContext):
    await callback.answer()
    await delete_account(telegram_id=callback.from_user.id)
    await state.clear()
    await callback.message.edit_text("–ê–∫–∫–∞—É–Ω—Ç —É–¥–∞–ª–µ–Ω üò¢", reply_markup=inline_keyboards.restart)



#===========================================================================================================================
# –ó–∞–≥–ª—É—à–∫–∞
#===========================================================================================================================

@router.message()
async def all_other_messages(message: Message):
    await message.answer("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ üßê")
    photo_data = await get_cat_error()
    if photo_data:
        photo_to_send = BufferedInputFile(photo_data, filename="cat_error.jpg")
        await message.bot.send_photo(chat_id=message.chat.id, photo=photo_to_send)
